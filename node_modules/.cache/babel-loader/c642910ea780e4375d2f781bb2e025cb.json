{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\TranslitWebApp\\\\translitapp\\\\src\\\\TranslitTextBox.js\";\nimport React from \"react\";\nimport \"./TranslitTextBox.css\";\nexport default class TranslitTextBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChanged = e => {\n      fetch(\"http://146.148.85.67/processWordJSON?inString=\" + value + \"&lang=tamil\").then(res => res.json()).then(json => {\n        console.log(json.twords[0].options);\n        this.setState({\n          suggestions: json.twords[0].options\n        });\n      });\n      const value = e.target.value;\n      let suggestions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(`^${value}`, \"i\");\n        suggestions = items.sort().filter(v => regex.test(v));\n      }\n\n      this.setState(() => ({\n        suggestions,\n        text: value\n      }));\n    };\n\n    this.state = {\n      suggestions: [],\n      text: \"\"\n    };\n  }\n\n  getSuggestions(value) {}\n\n  suggestionSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n  }\n\n  renderSuggestions() {\n    const suggestions = this.state.suggestions;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, suggestions.map(item => React.createElement(\"li\", {\n      onClick: () => this.suggestionSelected(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, item)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"TranslitTextBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Hey there! Go ahead :)\",\n      onInput: this.onTextChanged,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), this.renderSuggestions());\n  }\n\n}","map":{"version":3,"sources":["D:/Projects/TranslitWebApp/translitapp/src/TranslitTextBox.js"],"names":["React","TranslitTextBox","Component","constructor","props","onTextChanged","e","fetch","value","then","res","json","console","log","twords","options","setState","suggestions","target","length","regex","RegExp","items","sort","filter","v","test","text","state","getSuggestions","suggestionSelected","renderSuggestions","map","item","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AAEA,eAAe,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,aAZmB,GAYHC,CAAC,IAAI;AACnBC,MAAAA,KAAK,CACH,mDAAmDC,KAAnD,GAA2D,aADxD,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAIGF,IAJH,CAIQE,IAAI,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC,OAA3B;AACA,aAAKC,QAAL,CAAc;AAAEC,UAAAA,WAAW,EAAEN,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC;AAA9B,SAAd;AACD,OAPH;AAQA,YAAMP,KAAK,GAAGF,CAAC,CAACY,MAAF,CAASV,KAAvB;AACA,UAAIS,WAAW,GAAG,EAAlB;;AACA,UAAIT,KAAK,CAACW,MAAN,GAAe,CAAnB,EAAsB;AACpB,cAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,IAAGb,KAAM,EAArB,EAAwB,GAAxB,CAAd;AACAS,QAAAA,WAAW,GAAGK,KAAK,CAACC,IAAN,GAAaC,MAAb,CAAoBC,CAAC,IAAIL,KAAK,CAACM,IAAN,CAAWD,CAAX,CAAzB,CAAd;AACD;;AACD,WAAKT,QAAL,CAAc,OAAO;AAAEC,QAAAA,WAAF;AAAeU,QAAAA,IAAI,EAAEnB;AAArB,OAAP,CAAd;AACD,KA5BkB;;AAEjB,SAAKoB,KAAL,GAAa;AACXX,MAAAA,WAAW,EAAE,EADF;AAEXU,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEDE,EAAAA,cAAc,CAACrB,KAAD,EAAQ,CAErB;;AAoBDsB,EAAAA,kBAAkB,CAACtB,KAAD,EAAQ;AACxB,SAAKQ,QAAL,CAAc,OAAO;AACnBW,MAAAA,IAAI,EAAEnB,KADa;AAEnBS,MAAAA,WAAW,EAAE;AAFM,KAAP,CAAd;AAID;;AAEDc,EAAAA,iBAAiB,GAAG;AAAA,UACVd,WADU,GACM,KAAKW,KADX,CACVX,WADU;;AAElB,QAAIA,WAAW,CAACE,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,aAAO,IAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,WAAW,CAACe,GAAZ,CAAgBC,IAAI,IACnB;AAAI,MAAA,OAAO,EAAE,MAAM,KAAKH,kBAAL,CAAwBG,IAAxB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmDA,IAAnD,CADD,CADH,CADF;AAOD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,WAAW,EAAC,wBADd;AAEE,MAAA,OAAO,EAAE,KAAK7B,aAFhB;AAGE,MAAA,IAAI,EAAC,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMG,KAAK0B,iBAAL,EANH,CADF;AAUD;;AA/D0D","sourcesContent":["import React from \"react\";\r\nimport \"./TranslitTextBox.css\";\r\n\r\nexport default class TranslitTextBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      suggestions: [],\r\n      text: \"\"\r\n    };\r\n  }\r\n\r\n  getSuggestions(value) {\r\n   \r\n  }\r\n\r\n  onTextChanged = e => {\r\n    fetch(\r\n      \"http://146.148.85.67/processWordJSON?inString=\" + value + \"&lang=tamil\"\r\n    )\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        console.log(json.twords[0].options);\r\n        this.setState({ suggestions: json.twords[0].options });\r\n      });\r\n    const value = e.target.value;\r\n    let suggestions = [];\r\n    if (value.length > 0) {\r\n      const regex = new RegExp(`^${value}`, \"i\");\r\n      suggestions = items.sort().filter(v => regex.test(v));\r\n    }\r\n    this.setState(() => ({ suggestions, text: value }));\r\n  };\r\n\r\n  suggestionSelected(value) {\r\n    this.setState(() => ({\r\n      text: value,\r\n      suggestions: []\r\n    }));\r\n  }\r\n\r\n  renderSuggestions() {\r\n    const { suggestions } = this.state;\r\n    if (suggestions.length === 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <ul>\r\n        {suggestions.map(item => (\r\n          <li onClick={() => this.suggestionSelected(item)}>{item}</li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"TranslitTextBox\">\r\n        <input\r\n          placeholder=\"Hey there! Go ahead :)\"\r\n          onInput={this.onTextChanged}\r\n          type=\"text\"\r\n        />\r\n        {this.renderSuggestions()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}