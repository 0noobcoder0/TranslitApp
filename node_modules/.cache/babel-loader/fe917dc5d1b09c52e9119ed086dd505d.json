{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\TranslitWebApp\\\\translitapp\\\\src\\\\TranslitTextBox.js\";\nimport React from \"react\";\nimport \"./TranslitTextBox.css\";\nexport default class TranslitTextBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChanged = e => {\n      const _this$setState = this.setState({\n        items: json.twords[0].options\n      }),\n            items = _this$setState.items;\n\n      const value = e.target.value;\n      let suggestions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(`^${value}`, \"i\");\n        suggestions = items.sort().filter(v => regex.test(v));\n      }\n\n      this.setState(() => ({\n        suggestions,\n        text: value\n      }));\n    };\n\n    this.state = {\n      suggestions: [],\n      text: \"\"\n    };\n  }\n\n  getSuggestions(value) {\n    fetch(\"http://146.148.85.67/processWordJSON?inString=\" + value + \"&lang=tamil\").then(res => res.json()).then(json => {\n      console.log(json.twords[0].options);\n      this.setState({\n        items: json.twords[0].options\n      });\n    });\n  }\n\n  suggestionSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n  }\n\n  renderSuggestions() {\n    const suggestions = this.state.suggestions;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, suggestions.map(item => React.createElement(\"li\", {\n      onClick: () => this.suggestionSelected(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, item)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"TranslitTextBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Hey there! Go ahead :)\",\n      onInput: this.onTextChanged,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), this.renderSuggestions());\n  }\n\n}","map":{"version":3,"sources":["D:/Projects/TranslitWebApp/translitapp/src/TranslitTextBox.js"],"names":["React","TranslitTextBox","Component","constructor","props","onTextChanged","e","setState","items","json","twords","options","value","target","suggestions","length","regex","RegExp","sort","filter","v","test","text","state","getSuggestions","fetch","then","res","console","log","suggestionSelected","renderSuggestions","map","item","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AAEA,eAAe,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnBC,aAnBmB,GAmBHC,CAAC,IAAI;AAAA,6BACD,KAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEC,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC;AAAxB,OAAd,CADC;AAAA,YACXH,KADW,kBACXA,KADW;;AAEnB,YAAMI,KAAK,GAAGN,CAAC,CAACO,MAAF,CAASD,KAAvB;AACA,UAAIE,WAAW,GAAG,EAAlB;;AACA,UAAIF,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACpB,cAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,IAAGL,KAAM,EAArB,EAAwB,GAAxB,CAAd;AACAE,QAAAA,WAAW,GAAGN,KAAK,CAACU,IAAN,GAAaC,MAAb,CAAoBC,CAAC,IAAIJ,KAAK,CAACK,IAAN,CAAWD,CAAX,CAAzB,CAAd;AACD;;AACD,WAAKb,QAAL,CAAc,OAAO;AAAEO,QAAAA,WAAF;AAAeQ,QAAAA,IAAI,EAAEV;AAArB,OAAP,CAAd;AACD,KA5BkB;;AAEjB,SAAKW,KAAL,GAAa;AACXT,MAAAA,WAAW,EAAE,EADF;AAEXQ,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEDE,EAAAA,cAAc,CAACZ,KAAD,EAAQ;AACpBa,IAAAA,KAAK,CACH,mDAAmDb,KAAnD,GAA2D,aADxD,CAAL,CAGGc,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAAClB,IAAJ,EAHf,EAIGiB,IAJH,CAIQjB,IAAI,IAAI;AACZmB,MAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC,OAA3B;AACA,WAAKJ,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEC,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC;AAAxB,OAAd;AACD,KAPH;AAQD;;AAaDmB,EAAAA,kBAAkB,CAAClB,KAAD,EAAQ;AACxB,SAAKL,QAAL,CAAc,OAAO;AACnBe,MAAAA,IAAI,EAAEV,KADa;AAEnBE,MAAAA,WAAW,EAAE;AAFM,KAAP,CAAd;AAID;;AAEDiB,EAAAA,iBAAiB,GAAG;AAAA,UACVjB,WADU,GACM,KAAKS,KADX,CACVT,WADU;;AAElB,QAAIA,WAAW,CAACC,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,aAAO,IAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,WAAW,CAACkB,GAAZ,CAAgBC,IAAI,IACnB;AAAI,MAAA,OAAO,EAAE,MAAM,KAAKH,kBAAL,CAAwBG,IAAxB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmDA,IAAnD,CADD,CADH,CADF;AAOD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,WAAW,EAAC,wBADd;AAEE,MAAA,OAAO,EAAE,KAAK7B,aAFhB;AAGE,MAAA,IAAI,EAAC,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMG,KAAK0B,iBAAL,EANH,CADF;AAUD;;AA/D0D","sourcesContent":["import React from \"react\";\r\nimport \"./TranslitTextBox.css\";\r\n\r\nexport default class TranslitTextBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      suggestions: [],\r\n      text: \"\"\r\n    };\r\n  }\r\n\r\n  getSuggestions(value) {\r\n    fetch(\r\n      \"http://146.148.85.67/processWordJSON?inString=\" + value + \"&lang=tamil\"\r\n    )\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        console.log(json.twords[0].options);\r\n        this.setState({ items: json.twords[0].options });\r\n      });\r\n  }\r\n\r\n  onTextChanged = e => {\r\n    const { items } = this.setState({ items: json.twords[0].options });\r\n    const value = e.target.value;\r\n    let suggestions = [];\r\n    if (value.length > 0) {\r\n      const regex = new RegExp(`^${value}`, \"i\");\r\n      suggestions = items.sort().filter(v => regex.test(v));\r\n    }\r\n    this.setState(() => ({ suggestions, text: value }));\r\n  };\r\n\r\n  suggestionSelected(value) {\r\n    this.setState(() => ({\r\n      text: value,\r\n      suggestions: []\r\n    }));\r\n  }\r\n\r\n  renderSuggestions() {\r\n    const { suggestions } = this.state;\r\n    if (suggestions.length === 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <ul>\r\n        {suggestions.map(item => (\r\n          <li onClick={() => this.suggestionSelected(item)}>{item}</li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"TranslitTextBox\">\r\n        <input\r\n          placeholder=\"Hey there! Go ahead :)\"\r\n          onInput={this.onTextChanged}\r\n          type=\"text\"\r\n        />\r\n        {this.renderSuggestions()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}